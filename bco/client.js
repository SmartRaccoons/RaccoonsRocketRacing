// Generated by CoffeeScript 1.8.0
(function() {
  var Bco,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Bco = Bco = (function(_super) {
    __extends(Bco, _super);

    _.extend(Bco.prototype, Backbone.View.prototype);

    Bco.prototype.className = 'game-canvas';

    Bco.prototype.options = {
      path: ''
    };

    function Bco() {
      Bco.__super__.constructor.apply(this, arguments);
      Backbone.View.prototype.constructor.apply(this, arguments);
      this;
    }

    Bco.prototype.restart = function() {
      var id, val, _ref;
      _ref = this._elements;
      for (id in _ref) {
        val = _ref[id];
        if (val.sprite) {
          this.stage.removeChild(val.sprite);
        }
      }
      return Bco.__super__.restart.apply(this, arguments);
    };

    Bco.prototype.add = function(pr) {
      var sprite;
      Bco.__super__.add.apply(this, arguments);
      sprite = new PIXI.Sprite(PIXI.Texture.fromImage(this.options.path + 'd/img/' + pr.object + '.png'));
      sprite.anchor.x = 0.5;
      sprite.anchor.y = 0.5;
      this._elements[pr.id]['sprite'] = sprite;
      return this.stage.addChild(sprite);
    };

    Bco.prototype.elements = function(data) {
      var el, id, val, _ref, _results;
      _ref = this._elements;
      for (id in _ref) {
        el = _ref[id];
        if (el.sprite) {
          this.stage.removeChild(el.sprite);
        }
      }
      this._elements = {};
      _results = [];
      for (id in data) {
        val = data[id];
        _results.push(this.add(val));
      }
      return _results;
    };

    Bco.prototype.destroy = function(pr) {
      if (this._elements[pr.id].sprite) {
        this.stage.removeChild(this._elements[pr.id].sprite);
      }
      return Bco.__super__.destroy.apply(this, arguments);
    };

    Bco.prototype._updateView = function(dt) {
      Bco.__super__._updateView.apply(this, arguments);
      return this.draw();
    };

    Bco.prototype.draw = function() {
      var id, val, _ref;
      _ref = this._elements;
      for (id in _ref) {
        val = _ref[id];
        if (val.sprite) {
          val.sprite.position.x = val.pos[0] + val.size[0] / 2;
          val.sprite.position.y = val.pos[1] + val.size[1] / 2;
          val.sprite.rotation = val.angle;
        }
      }
      return this.renderer.render(this.stage);
    };

    Bco.prototype.render = function() {
      this.stage = new PIXI.Stage;
      this.renderer = PIXI.autoDetectRenderer(416, 416);
      this.$el.append(this.renderer.view);
      return this;
    };

    return Bco;

  })(window.BcoCore);

}).call(this);

//# sourceMappingURL=client.js.map
